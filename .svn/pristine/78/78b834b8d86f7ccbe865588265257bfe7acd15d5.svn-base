using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Newtonsoft.Json;

namespace SLIK.Model
{
    public class IdebIndiv
    {
        public IdebIndivSearchVar SearchVar { get; set; }

        public List<IdebIndivData> IndivDataList { get; set; }
    }

    public class IdebIndivSearchVar
    {
        //public string IdebId { get; set; }
        public string NamaDebitur { get; set; }

        public string JenisKelamin { get; set; }

        public string JenisKelaminKet { get; set; }

        public string NoIdentitas { get; set; }

        public string Npwp { get; set; }

        public string TempatLahir { get; set; }

        [JsonProperty(PropertyName = "tanggalLahir")]
        private string TanggalLahirString { get; set; }
        public DateTime? TanggalLahir
        {
            get
            {
                return string.IsNullOrEmpty(TanggalLahirString) ? (DateTime?)null : DateTime.ParseExact(TanggalLahirString, "yyyyMMdd", null);
            }
            set { TanggalLahirString = value.GetValueOrDefault().ToString("yyyyMMdd"); }
        }
    }

    public class IdebIndivData
    {
        //public string IdebId { get; set; }
        //public int Seq { get; set; }

        /// <summary>
        /// Debitur Individual Unique Id from Debtector.
        /// </summary>
        public string DebtectorId { get; set; }

        /// <summary>
        /// Foreign Key to IdebMain.DebtectorId
        /// </summary>
        public string DebtectorIdebId { get; set; }

        public string NamaDebitur { get; set; }

        public string Identitas { get; set; }

        public string NoIdentitas { get; set; }

        public string JenisKelamin { get; set; }

        public string Npwp { get; set; }

        public string TempatLahir { get; set; }

        [JsonProperty(PropertyName = "tanggalLahir")]
        private string TanggalLahirString { get; set; }
        public DateTime? TanggalLahir
        {
            get
            {
                return string.IsNullOrEmpty(TanggalLahirString) ? (DateTime?)null : DateTime.ParseExact(TanggalLahirString, "yyyyMMdd", null);
            }
            set { TanggalLahirString = value.GetValueOrDefault().ToString("yyyyMMdd"); }
        }
        
        public string Pelapor { get; set; }

        [JsonProperty(PropertyName = "tanggalDibentuk")]
        private string TanggalDibentukString { get; set; }
        public DateTime? TanggalDibentuk
        {
            get
            {
                return string.IsNullOrEmpty(TanggalDibentukString) ? (DateTime?)null : DateTime.ParseExact(TanggalDibentukString, "yyyyMMddHHmmss", null);
            }
            set { TanggalLahirString = value.GetValueOrDefault().ToString("yyyyMMddHHmmss"); }
        }

        [JsonProperty(PropertyName = "tanggalUpdate")]
        private string TanggalUpdateString { get; set; }
        public DateTime? TanggalUpdate
        {
            get
            {
                return string.IsNullOrEmpty(TanggalUpdateString) ? (DateTime?)null : DateTime.ParseExact(TanggalUpdateString, "yyyyMMddHHmmss", null);
            }
            set { TanggalUpdateString = value.GetValueOrDefault().ToString("yyyyMMddHHmmss"); }
        }

        public string Alamat { get; set; }

        public string Kelurahan { get; set; }

        public string Kecamatan { get; set; }

        public string KabKota { get; set; }

        public string KodePos { get; set; }

        public string Negara { get; set; }

        public string Pekerjaan { get; set; }

        public string TempatBekerja { get; set; }

        public string BidangUsaha { get; set; }

        public string KodeGelarDebitur { get; set; }
    }
}